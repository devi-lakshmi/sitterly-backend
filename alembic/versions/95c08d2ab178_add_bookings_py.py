"""add bookings.py

Revision ID: 95c08d2ab178
Revises: e6f0ffe7f1a7
Create Date: 2024-01-21 09:48:25.125471

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '95c08d2ab178'
down_revision: Union[str, None] = 'e6f0ffe7f1a7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bookings',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('starts_at', sa.DateTime(), nullable=True),
                    sa.Column('ends_at', sa.DateTime(), nullable=True),
                    sa.Column('is_canceled', sa.Boolean(),
                              nullable=False, default=False),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('sitter_profile_id',
                              sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['sitter_profile_id'], [
                        'sitterprofiles.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_bookings_id'), 'bookings', ['id'], unique=False)
    # op.drop_index('ix_Bookings_id', table_name='Bookings')
    # op.drop_table('Bookings')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Bookings',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text(
                        'nextval(\'"Bookings_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
                    sa.Column('starts_at', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('ends_at', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('is_canceled', sa.BOOLEAN(), autoincrement=False,
                              nullable=False, default=False),
                    sa.Column('description', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('created_at', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('updated_at', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('user_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('sitter_profile_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['sitter_profile_id'], [
                        'sitterprofiles.id'], name='Bookings_sitter_profile_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], name='Bookings_user_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='Bookings_pkey')
                    )
    op.create_index('ix_Bookings_id', 'Bookings', ['id'], unique=False)
    op.drop_index(op.f('ix_bookings_id'), table_name='bookings')
    op.drop_table('bookings')
    # ### end Alembic commands ###
